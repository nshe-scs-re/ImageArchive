secrets:
  image_archive_ca_cert:
    file: ${USERPROFILE}/source/secrets/image-archive-ca.crt
  image_archive_api_cert:
    file: ${USERPROFILE}/source/secrets/image-archive-api.pfx
  image_archive_api_cert_pw:
    file: ${USERPROFILE}/source/secrets/image-archive-api-cert-pw.txt

volumes:
  sqlvolume:

services:
  dev_db:
    container_name: dev_db
    profiles: [dev]
    image: mcr.microsoft.com/mssql/server:2022-latest
    env_file: ${USERPROFILE}/source/secrets/dev_db.env
    volumes:
      - sqlvolume:/var/opt/mssql
    restart: unless-stopped
    ports:
      - "127.0.0.1:1433:1433"

  dev_api:
    container_name: dev_api
    profiles: [dev]
    # platform: linux/amd64
    image: ${DOCKER_REGISTRY-}image-archive-api
    # pull_policy: build
    build:
      context: src/api
      dockerfile: Dockerfile
      # args:
      #   - --no-cache
    depends_on:
      - dev_db
    secrets:
      - source: image_archive_ca_cert
        target: /usr/local/share/ca-certificates/image-archive-ca.crt
      - source: image_archive_api_cert
        target: /https/image_archive_api_cert.pfx
    env_file: ${USERPROFILE}/source/secrets/dev_api.env
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
      ASPNETCORE_HTTPS_PORTS: 8081
    ports:
      - "127.0.0.1:8080:8080"
      # - "127.0.0.1:8081:8081"
    volumes:
      - ${USERPROFILE}/source/Images:/app/Images
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  dev_frontend:
    container_name: dev_frontend
    profiles: [dev]
    # platform: linux/amd64
    image: ${DOCKER_REGISTRY-}image-archive
    # pull_policy: build
    build:
      context: src/frontend
      dockerfile: Dockerfile
      # args:
      #   - --no-cache
    depends_on:
      - dev_api
    secrets:
      - source: image_archive_ca_cert
        target: /usr/local/share/ca-certificates/image-archive-ca.crt
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      # - ASPNETCORE_HTTPS_PORTS=443
      # - ASPNETCORE_URLS=http://+;https://+
    ports:
      - "127.0.0.1:80:80"
      # - "127.0.0.1:443:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  api:
    profiles: [prod]
    # platform: linux/amd64
    network_mode: host
    image: ${DOCKER_REGISTRY-}image-archive-api
    # pull_policy: build
    build:
      context: src/api
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    #volumes:
    restart: on-failure:3

  frontend:
    profiles: [prod]
    # platform: linux/amd64
    network_mode: host
    image: ${DOCKER_REGISTRY-}image-archive
    # pull_policy: build
    build:
      context: src/frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    #volumes:
    restart: on-failure:3