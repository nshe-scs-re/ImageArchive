@inject TokenProvider TokenProvider

<Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>
  <Router AppAssembly="typeof(Program).Assembly">
    <Found Context="routeData">
      <Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
        <Authorizing>
          <p>Determining session state, please wait...</p>
        </Authorizing>
        <NotAuthorized>
          <p>You're not authorized to reach this page. You need to log in.</p>
        </NotAuthorized>
      </Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView> 
      <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
    <NotFound>
      <PageTitle>Not found</PageTitle>
      <LayoutView Layout="@typeof(Layout.MainLayout)">
        <p role="alert">Sorry, there's nothing at this address.</p>
      </LayoutView>
    </NotFound>
  </Router>
</Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>

@code {
    [Parameter]
    public InitialApplicationState? InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.AccessToken = InitialState?.AccessToken;
        TokenProvider.IdToken = InitialState?.IdToken;
        TokenProvider.RefreshToken = InitialState?.RefreshToken;

        return base.OnInitializedAsync();
    }
}
