@inject NavigationManager Navigation
@inject ThemeService ThemeService

<nav class="navbar navbar-expand-md rounded @GetTheme()">
  <div class="container-fluid">
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavBar">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="mainNavBar">
      <ul class="navbar-nav mx-auto justify-content-md-center">
        <AuthorizeView>
          <Authorized>
            <li class="nav-item"><NavLink class="nav-link rounded" href="/" Match="NavLinkMatch.All">Home</NavLink></li>
            <li class="nav-item"><NavLink class="nav-link rounded" href="http://localhost:8080/swagger">Swagger</NavLink></li>
            <li class="nav-item"><button class="rounded" @onclick=ToggleTheme>Toggle Theme</button></li>
          </Authorized>
          <NotAuthorized>
            <li class="nav-item"><NavLink class="nav-link rounded" href="/" Match="NavLinkMatch.All">Home</NavLink></li>
            <li class="nav-item"><NavLink class="nav-link rounded" href="http://localhost:8080/swagger">Swagger</NavLink></li>
            <li class="nav-item"><button class="nav-link rounded" @onclick=ToggleTheme>Toggle Theme</button></li>
          </NotAuthorized>
        </AuthorizeView>
      </ul>
      <ul class="navbar-nav ml-auto justify-content-md-end">
        <AuthorizeView>
          <Authorized>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle rounded" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">@userName</a>
              <ul class="dropdown-menu">
                <li><NavLink class="dropdown-item nav-link" href="/profile" Match="NavLinkMatch.All">View Profile</NavLink></li>
                <li><NavLink class="dropdown-item nav-link" href="/logout">Logout</NavLink></li>
              </ul>
            </li>
          </Authorized>
          <NotAuthorized>
            <li class="nav-item"><NavLink class="nav-link rounded" href="/login">Login</NavLink></li>
          </NotAuthorized>
        </AuthorizeView>
      </ul>
    </div>
  </div>
</nav>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    public string userName = "";

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            userName = state?.User?.Identity?.Name ?? string.Empty;
        }

        await base.OnInitializedAsync();
    }

    public void ToggleTheme()
    {
        ThemeService.ToggleTheme();
    }

    protected override void OnInitialized()
    {
        ThemeService.StateChanged += StateHasChanged;
    }

    private string GetTheme()
    {
        return ThemeService.State ? "custom-color-bg-secondary" : "custom-color-bg-dm-secondary";
    }

    public void Dispose()
    {
        ThemeService.StateChanged -= StateHasChanged;
    }
}