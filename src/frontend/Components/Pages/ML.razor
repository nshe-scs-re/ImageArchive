@page "/ML"
@using System.Globalization

<h1 class="text-center mt-4">Prediction Center</h1>

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-body">
            <h3 class="card-title">Select Options</h3>

            <!-- Location Dropdown -->
            <div class="form-group">
                <label for="locationSelect" class="form-label">Location:</label>
                <select id="locationSelect" class="form-control" @onchange="HandleLocationChange">
                    <option value="">-- Select Location --</option>
                    @foreach (var location in Locations)
                    {
                        <option value="@location">@location</option>
                    }
                </select>
            </div>

            <!-- Camera Options -->
            @if (ShowCameraOptions)
            {
                <div class="form-group mt-3">
                    <label for="cameraSelect" class="form-label">Camera:</label>
                    <select id="cameraSelect" class="form-control" @bind="SelectedCamera">
                        <option value="">-- Select Camera --</option>
                        @foreach (var camera in CameraOptions)
                        {
                            <option value="@camera">@camera</option>
                        }
                    </select>
                </div>
            }

            <!-- Date Picker -->
            <div class="form-group mt-3">
                <label for="datePicker" class="form-label">Future Date:</label>
                <input id="datePicker" type="date" class="form-control" @bind="SelectedDate" />
                @if (!IsValidDate)
                {
                    <small class="text-danger">Please select a date in the future.</small>
                }
            </div>

            <!-- Submit Button -->
            <button class="btn btn-primary mt-4 w-100" @onclick="SubmitSelection"
                disabled="@(string.IsNullOrWhiteSpace(SelectedLocation) || !IsValidDate)">
                Submit
            </button>

            <!-- Display Generated Path -->
            @if (!string.IsNullOrWhiteSpace(ImagePath))
            {
                <div class="mt-4">
                    <h5>Generated Path:</h5>
                    <p>@ImagePath</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<string> Locations = new() { "Rockland", "Sheep", "Snake", "Spring" };
    private Dictionary<string, List<string>> LocationCameras = new()
    {
        { "Rockland", new List<string>() },
        { "Sheep", new List<string> { "Camera 1", "Camera 2", "Camera 3", "Camera 4" } },
        { "Snake", new List<string> { "Camera 1", "Camera 2", "Camera 3" } },
        { "Spring", new List<string>() }
    };

    private string SelectedLocation = string.Empty;
    private string SelectedCamera = string.Empty;
    private DateTime SelectedDate = DateTime.Now;
    private bool IsValidDate = true;
    private string ImagePath = string.Empty; // Holds the dynamically generated image path
    private bool ShowCameraOptions = false;
    private List<string> CameraOptions = new();

    // Handle location change and update camera options
    private void HandleLocationChange(ChangeEventArgs e)
    {
        SelectedLocation = e.Value?.ToString() ?? string.Empty;

        if (!string.IsNullOrEmpty(SelectedLocation) && LocationCameras.ContainsKey(SelectedLocation))
        {
            CameraOptions = LocationCameras[SelectedLocation];
            ShowCameraOptions = CameraOptions.Count > 0;
        }
        else
        {
            CameraOptions = new List<string>();
            ShowCameraOptions = false;
        }
    }

    // Validates if the selected date is in the future
    private void ValidateFutureDate()
    {
        IsValidDate = SelectedDate > DateTime.Now;
    }

    private void SubmitSelection()
    {
        // Generate the image path
        string formattedDate = SelectedDate.ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
        ImagePath = $"/Images/{SelectedLocation}{(ShowCameraOptions ? $"/{SelectedCamera}" : string.Empty)}/{formattedDate}";

        // Example: Log to console or use this path elsewhere
        Console.WriteLine($"Location: {SelectedLocation}, Camera: {SelectedCamera}, Date: {SelectedDate}, ImagePath: {ImagePath}");
    }
}