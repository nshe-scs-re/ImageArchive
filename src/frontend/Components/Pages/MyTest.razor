@page "/mytest"
@inject HttpService HttpService
@inject IConfiguration config

<h3>MyTest</h3>

<button @onclick="OnShowModalClick">Upload Files</button>

<div class="modal" tabindex="-1" style="display:@(isModalVisible ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Upload Files</h5>
                <button type="button" class="btn-close" @onclick="OnHideModalClick"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="siteName" class="form-label">Site Name</label>
                    <select class="form-select" id="siteName" @bind="siteName">
                        <option value="">Select a site</option>
                        @foreach (var site in siteNames)
                        {
                            <option value="@site">@site</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="cameraPosition" class="form-label">Camera Position</label>
                    <select class="form-select" id="cameraPosition" @bind="cameraPosition">
                        <option value="">Select a camera position</option>
                        @foreach (var position in cameraPositions)
                        {
                            <option value="@position">@position</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="cameraNumber" class="form-label">Camera Number</label>
                        <select class="form-select" id="cameraNumber" @bind="cameraNumber">
                        <option value="">Select a camera number</option>
                        @foreach (var number in cameraNumbers)
                        {
                            <option value="@number">@number</option>
                        }
                        </select>
                        </div>
                        <div class="mb-3">
                            <label for="photoTime" class="form-label">Time of Photo Taken (PST)</label>
                            <input type="datetime-local" class="form-control" id="photoTime" @bind="photoTime" />
                </div>
                <InputFile OnChange="UploadSingle" id="fileInputElement" multiple accept=".gif,.png,.jpg,.jpeg" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="OnHideModalClick">Close</button>
                <button type="button" class="btn btn-primary" @onclick="UploadFiles" disabled="@(!CanUpload)">Upload</button>
            </div>
        </div>
    </div>
</div>




@if(errors.Count > 0)
{
    <h2>Error(s)</h2>
    <ul class="text-danger">
        @foreach (var error in errors)
        {
            <li>@error</li>
        }
    </ul>
}

@code{
    private bool isModalVisible = false;
    private int maxAllowedFiles = 5;
    private List<string> errors = new();
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();
    private string siteName;
    private string cameraPosition;
    private string cameraNumber;
    private DateTime? photoTime;
    private bool CanUpload => !string.IsNullOrEmpty(siteName) && !string.IsNullOrEmpty(cameraPosition) && photoTime.HasValue;

    private List<string> siteNames = new() { "Rockland", "Sheep", "Snake", "Spring" };
    private List<string> cameraPositions = new() { "Position 1", "Position 2", "Position 3" };
    private List<string> cameraNumbers = new() { "Camera 1", "Camera 2", "Camera 3" };

    private Task OnShowModalClick()
    {
        isModalVisible = true;
        return Task.CompletedTask;
    }

    private Task OnHideModalClick()
    {
        isModalVisible = false;
        return Task.CompletedTask;
    }

    //TODO: Button triggers once the user clicks the upload button, but the button doesnt trigger ever again without refreshing web page. Why?
    private async Task UploadSingle(InputFileChangeEventArgs e)
    {
        errors.Clear();
        var files = e.GetMultipleFiles();
        selectedFiles.AddRange(files);
        // var response = HttpService.UploadImageAsync(files);
        // var temp = await response.Result.Content.ReadAsStringAsync();
        //TODO: Set it to where the user can upload image BUT only if site, time, and camera are selected
        try
        { 
            if (e.FileCount > maxAllowedFiles)
            {
                errors.Add($"Error: Upload exceeding max file count. {maxAllowedFiles}");
                //selectedFiles.RemoveRange(maxAllowedFiles, selectedFiles.Count - maxAllowedFiles);
            }
            var response = await HttpService.UploadImageAsync(selectedFiles);
            foreach (var file in files)
            {
                // Get the file name and size
                var fileName = file.Name;
                var fileSize = file.Size;

                // Read the file contents
                using var stream = file.OpenReadStream();
                using var reader = new StreamReader(stream);
                var fileContents = await reader.ReadToEndAsync();

                // Do something with the file contents
                Console.WriteLine($"File name: {fileName}");
                Console.WriteLine($"File size: {fileSize} bytes");
                Console.WriteLine($"File contents: {fileContents}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Message: {ex.Message}");
            throw;
        }
    }

    private async Task UploadFiles()
    {
        if (CanUpload)
        {
            await UploadSingle(new InputFileChangeEventArgs(selectedFiles));
            OnHideModalClick();
        }
    }
}
